---
title: "Dashboard"
author: "G02/T61"
output: 
  flexdashboard::flex_dashboard:
    orientation: rows
    vertical_layout: scroll
    social: menu
    source: embed
    theme: sandstone
---

```{r config, include=FALSE}
# bibliotecas --- modificar sempre que acrescentar uma biblioteca
bibliotecas <- c("knitr", "rmdformats", "lubridate", "ggplot2","dplyr", "DT", "gt",
                 "flextable", "plotly", "gganimate","scales")
for (bibl in bibliotecas) {
        library(bibl, character.only = TRUE)
}
rm(bibl, bibliotecas)

```

# Introdução {.sidebar}
Este _dashboard_ irá mostrar alguns dos gráficos  mais relevantes para a analise de dados disponibilizada, tem como objetivo uma interpretação fácil e objetiva. 

```{r data_loading, include=FALSE}

data_files <- c("calendar.Rda", "customers.Rda", "productCategory.Rda",
                "products.Rda", "productSubCategory.Rda","territory.Rda",
                "factSales.Rda")
for (dfiles in data_files) {
    load(dfiles)
    }
rm(dfiles, data_files)


facts_dims <- factSales |>
    merge(calendar, by.x = "OrderDate", by.y = "Date") |>
    merge(customers, by = "CustomerKey") |>
    merge(territory, by.x = "SalesTerritoryKey", 
          by.y = "Territory Key") |>
    merge(products, by = "ProductKey")

save(facts_dims, file = "facts_dims.Rda")
load("facts_dims.Rda")

```


# Marketing

```{r fig.height=5, fig.width=7}
occupation_counts <- table(facts_dims$Occupation)
occupation_df <- data.frame(Occupation = names(occupation_counts),
                            Count = as.numeric(occupation_counts))
occupation_df <- occupation_df[order(occupation_df$Count), ]
occupation_df$Count <- round(occupation_df$Count / 1000, 1)

ggplot(occupation_df, aes(x = Occupation, y = Count)) +
    geom_segment(aes(x = Occupation, xend = Occupation, y = 0, yend = Count), color = "skyblue") +
    geom_point(color = "#0080ff", size = 3) +
    geom_text(aes(label = Count), vjust = -1.5, size = 3) +
    coord_flip() +  
    labs(title = "Distribuição de Ocupação dos Clientes",
         x = "Ocupação",
         y = "Número (em milhares)") +
    theme_minimal()

```

```{r fig.height=5, fig.width=7}

children_counts <- table(facts_dims$NumberChildrenAtHome)
children_df <- data.frame(ChildrenCount = as.integer(names(children_counts)),
                          Count = as.integer(children_counts))
children_df <- children_df[order(children_df$ChildrenCount), ]
children_df$Count <- round(children_df$Count / 1000, 1)
ggplot(children_df, aes(x = factor(ChildrenCount), y = Count)) +
    geom_segment(aes(x = factor(ChildrenCount), xend = factor(ChildrenCount), y = 0, yend = Count), color = "skyblue") +
    geom_text(aes(label = Count), vjust = -1, size = 3) +  
    labs(title = "Número de Filhos por Casa",
         x = "Número de Filhos",
         y = "Número (em milhares)") +
         theme_minimal()
```






# Logistica

```{r fig.height=5, fig.width=7}
plot_bubble_chart <- function(data) {
    soma_portes_pais <- aggregate(Freight ~ Country, data = data, sum)
    soma_portes_pais$Country <- factor(soma_portes_pais$Country, levels = soma_portes_pais$Country[order(soma_portes_pais$Freight)])
    soma_portes_pais$Freight <- soma_portes_pais$Freight / 1000

    grafico_bolhas <- ggplot(soma_portes_pais, aes(x = Country, y = Freight, label = paste0("", format(round(Freight, 0), big.mark = ",")))) +
        geom_point(color = "dodgerblue", alpha = 0.7) +
        geom_text(vjust = -0.5, size = 3) +
        labs(
            title = "Total de Portes pagos em cada país",
            x = "País",
            y = "Total de Portes pagos (em milhares de dólares)",
        ) +
        theme_minimal() +
        theme(axis.text.x = element_text(angle = 45, hjust = 1))
    print(grafico_bolhas)
}

plot_bubble_chart(facts_dims)

```

```{r fig.height=5, fig.width=7}

inventory_by_category <- facts_dims %>%
  group_by(Category) %>%
  summarise(Unique_Products = n_distinct(ProductKey))
inventory_by_category <- inventory_by_category %>%
  arrange(desc(Unique_Products))
ggplot(inventory_by_category, aes(x = reorder(Category, -Unique_Products), y = Unique_Products)) +
  geom_segment(aes(xend = reorder(Category, -Unique_Products), yend = 0), color = "skyblue", size = 2) +
  geom_point(color = "blue", size = 3) +
  geom_text(aes(label = Unique_Products), vjust = -0.5, size = 3) +
  labs(x = "Categoria", y = "Quantidade de Produtos Únicos", title = "Inventário por Categoria (Decrescente)") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```



# Vendas

```{r fig.height=5, fig.width=7}
library(ggplot2)

vendas_por_ano <- aggregate(SalesAmount ~ CalendarYear, data = facts_dims, sum)

grafico_vendas <- ggplot(vendas_por_ano, aes(x = CalendarYear, y = SalesAmount)) +
    geom_line(color = "blue") +
    geom_point(color = "red", size = 3) +
    geom_text(aes(label = paste0("", round(SalesAmount / 1000000, 2), "")), vjust = -0.5, hjust = -0.2, size = 3) +
    labs(title = "Evolução de Vendas ao Longo dos Anos",
         x = "Ano",
         y = "Vendas Totais (em milhões de Dolars)") +
    scale_y_continuous(labels = scales::dollar_format(scale = 1e-6)) +
    theme_minimal()

print(grafico_vendas)
```



```{r fig.height=5, fig.width=7}
library(ggplot2)
library(forcats)
library(scales)

sales_by_country <- aggregate(SalesAmount ~ Country, data = facts_dims, FUN = sum)
sales_by_country <- sales_by_country[order(sales_by_country$SalesAmount, decreasing = TRUE), ]
ggplot(sales_by_country, aes(x = fct_reorder(Country, desc(SalesAmount)), y = SalesAmount / 1000000)) +
    geom_segment(aes(xend = Country, yend = 0), color = "skyblue") +  
    geom_point(color = "skyblue", size = 3) +  
    geom_text(aes(label = paste0(scales::comma(SalesAmount / 1000000))), vjust = -1, size = 3) +
    labs(title = "Vendas por País (2016-2019)",
         x = "País",
         y = "Total de Vendas (Milhões USD)") +
    scale_y_continuous(labels = scales::comma) +  
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1),
          axis.title = element_text(size = 10), 
          plot.title = element_text(size = 12))



```



# Contabilidade

```{r fig.height=5, fig.width=7}
tax_by_country <- aggregate(TaxAmt ~ Country, data = facts_dims, FUN = sum)
tax_by_country$TaxAmt_million <- round(tax_by_country$TaxAmt / 1000, 0)
ggplot(tax_by_country, aes(x = "", y = TaxAmt, fill = Country, label = TaxAmt_million)) +
    geom_bar(stat = "identity", width = 1) +
    geom_text(aes(label = paste0(round(TaxAmt_million, 2), "")), position = position_stack(vjust = 0.5)) +
    coord_polar(theta = "y") +
    theme_void() +
    theme(legend.position = "right") +
    scale_fill_brewer(palette = "Set3") + 
    ggtitle("Soma dos Impostos por País (em milhares de USD)") +
    labs(y = "Tax Amount (Millions of dollars)") +  
    scale_y_continuous(labels = comma) +  
    theme(legend.position = "right")
```
